For compiling , watching , compressing and also auto add prefixes on the scss file 



"scripts": {
  "compile:sass": "sass sass/main.scss css/style.css ",
    "watch:sass": "sass sass/main.scss css/style.css --watch",
  "prefix:css": "postcss css/style.css -o css/style.prefixed.css",
  "compress:css": "postcss css/style.prefixed.css -o css/style.min.css",
  "build:css": "npm-run-all compile:sass prefix:css compress:css"
}


intall the prefixes with
npm install --save-dev postcss postcss-cli autoprefixer cssnano


And also create this file in your project for easy use of prefix plugins [ postcss.config.js ]
            |
            |
        This reduces stress

inside  [ postcss.config.js ] paste this ‚¨áÔ∏èüëá :

  module.exports = {
 plugins: [
 require('autoprefixer'),
 require('cssnano')
 ]
 };

        

        install npm-run-all for build:css before running build:css

        do This
        npm install --save-dev npm-run-all
 then 
 
 run : npm run build:css



 


//// WITH THESE SCRIPTS YOUR PREEFIXE GET UPDATED AUTOMATICALLY WHILE MAKING CHANGES

"scripts": {
  "compile:sass": "sass sass/main.scss css/style.css",
  "watch:sass": "sass sass/main.scss css/style.css --watch",
  "prefix:css": "postcss css/style.css -o css/style.prefixed.css",
  "compress:css": "postcss css/style.prefixed.css -o css/style.min.css",
  "build:css": "npm-run-all compile:sass prefix:css compress:css",
  "watch:css": "npm-run-all --parallel watch:sass watch:postcss",
  "watch:postcss": "postcss css/style.css -o css/style.prefixed.css --watch"
}

Then run npm run watch:css




////// HOW TO CREATE CAROOUSEL FUNCTION WITH JS WITHOUT DUPLICATION OR REPEATITION OF INVESTOR IMAGE


/// Note that you must have your css styling already when doing this 
/// you can as well do the duplication in the html for testing purpose to be sure of what ypure styling  


const duplicate = document.querySelector(".investor-images").cloneNode(true);
// this means duplicate or repeat this class eLement

// make sure the cloneNode() value is set to true for proper cloning, repetition or duplication 


parent= document.querySelector(".investor-content").appendChild(duplicate);
// this means show the duplicated class element
